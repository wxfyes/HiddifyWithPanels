name: Auto Build All Platforms

on:
  # 移除自动推送构建，只保留手动触发和tag发布
  # push:
  #   branches: [ main, master ]
  #   tags: [ 'v*' ]
  # pull_request:
  #   branches: [ main, master ]
  
  # 只在发布tag时自动构建
  release:
    types: [published]
  
  # 手动触发构建
  workflow_dispatch:
    inputs:
      platform:
        description: 'Platform to build (all, android, windows, macos, linux)'
        required: false
        default: 'all'
        type: choice
        options:
        - all
        - android
        - windows
        - macos
        - linux
      tag_name:
        description: 'Tag name for release (e.g., v1.0.0)'
        required: false
        type: string
      create_release:
        description: 'Create release after build'
        required: false
        default: false
        type: boolean

env:
  IS_GITHUB_ACTIONS: 1
  CHANNEL: "prod"
  FLUTTER_VERSION: '3.24.0'
  TARGET_NAME_apk: "HiddifyWithPanels-Android"
  TARGET_NAME_exe: "HiddifyWithPanels-Windows-x64"
  TARGET_NAME_dmg: "HiddifyWithPanels-MacOS"
  TARGET_NAME_pkg: "HiddifyWithPanels-MacOS-Installer"
  TARGET_NAME_AppImage: "HiddifyWithPanels-Linux-x64"
  TARGET_NAME_deb: "HiddifyWithPanels-Debian-x64"
  TARGET_NAME_rpm: "HiddifyWithPanels-rpm-x64"

jobs:
  build_android:
    if: github.event.inputs.platform == 'all' || github.event.inputs.platform == 'android' || github.event.inputs.platform == ''
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2.16.0
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true
          
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          
      - name: Setup Android Signing
        run: |
          echo "=== Decoding keystore ==="
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 -d > ${{ github.workspace }}/android/app/hiddify-with-panels.keystore
          
          echo "=== Keystore File Info ==="
          ls -la ${{ github.workspace }}/android/app/hiddify-with-panels.keystore
          echo "Keystore file size: $(wc -c < ${{ github.workspace }}/android/app/hiddify-with-panels.keystore) bytes"
          
          echo "=== Verifying keystore integrity ==="
          file ${{ github.workspace }}/android/app/hiddify-with-panels.keystore
          
          echo "=== Testing keystore with keytool ==="
          if keytool -list -v -keystore ${{ github.workspace }}/android/app/hiddify-with-panels.keystore -storepass hiddify123 -alias hiddify-with-panels; then
            echo "✅ Keystore verification successful with alias"
          else
            echo "❌ Keystore verification failed with alias"
            echo "=== Trying without alias ==="
            if keytool -list -v -keystore ${{ github.workspace }}/android/app/hiddify-with-panels.keystore -storepass hiddify123; then
              echo "✅ Keystore verification successful without alias"
            else
              echo "❌ Keystore verification completely failed"
              echo "=== Checking keystore content ==="
              hexdump -C ${{ github.workspace }}/android/app/hiddify-with-panels.keystore | head -20
            fi
          fi
          echo "====================================="
          
      - name: Prepare for Android
        run: |
          make android-prepare
          tree
          
      - name: Install Dependencies
        run: |
          flutter pub get
          dart run build_runner build --delete-conflicting-outputs
          dart run slang

      - name: Build APK
        env:
          ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
          ANDROID_STORE_PASSWORD: ${{ secrets.ANDROID_STORE_PASSWORD }}
          ANDROID_KEYSTORE_PATH: ${{ github.workspace }}/android/app/hiddify-with-panels.keystore
        run: |
          echo "=== Debug Environment Variables ==="
          echo "ANDROID_KEY_ALIAS: $ANDROID_KEY_ALIAS"
          echo "ANDROID_KEY_PASSWORD: $ANDROID_KEY_PASSWORD"
          echo "ANDROID_STORE_PASSWORD: $ANDROID_STORE_PASSWORD"
          echo "ANDROID_KEYSTORE_PATH: $ANDROID_KEYSTORE_PATH"
          echo "Keystore file exists: $(test -f $ANDROID_KEYSTORE_PATH && echo 'YES' || echo 'NO')"
          echo "Keystore file size: $(ls -la $ANDROID_KEYSTORE_PATH 2>/dev/null || echo 'File not found')"
          echo "=================================="
          flutter build apk --release

      - name: Build AAB
        env:
          ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
          ANDROID_STORE_PASSWORD: ${{ secrets.ANDROID_STORE_PASSWORD }}
          ANDROID_KEYSTORE_PATH: ${{ github.workspace }}/android/app/hiddify-with-panels.keystore
        run: |
          echo "=== Debug Environment Variables ==="
          echo "ANDROID_KEY_ALIAS: $ANDROID_KEY_ALIAS"
          echo "ANDROID_KEYSTORE_PATH: $ANDROID_KEYSTORE_PATH"
          echo "=================================="
          flutter build appbundle --release

      - name: Upload Android Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-builds
          path: |
            build/app/outputs/flutter-apk/*.apk
            build/app/outputs/bundle/release/*.aab
          retention-days: 30

  build_windows:
    if: github.event.inputs.platform == 'all' || github.event.inputs.platform == 'windows' || github.event.inputs.platform == ''
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2.16.0
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true

      - name: Install Dependencies
        run: |
          flutter pub get
          dart run build_runner build --delete-conflicting-outputs
          dart run slang

      - name: Prepare for Windows
        run: |
          make windows-prepare
          tree

      - name: Build Windows
        env:
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
        run: |
          make windows-release
  
      - name: Package Windows
        run: |
          .\\scripts\\package_windows.ps1
          
      - name: Build MSIX Package
        run: |
          # 使用flutter_distributor构建MSIX包
          # 这会自动生成MSIX文件
          echo "MSIX build completed - using flutter_distributor"
          
      - name: Upload Windows Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-builds
          path: |
            ./out
            build/windows/runner/Release/*.msix
          retention-days: 30

  build_macos:
    if: github.event.inputs.platform == 'all' || github.event.inputs.platform == 'macos' || github.event.inputs.platform == ''
    runs-on: macos-13
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2.16.0
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true

      - name: Setup dependencies
        run: |
          make macos-install-dependencies

      - name: Prepare for macOS
        run: |
          make macos-prepare
          tree

      - name: Build macOS
        run: |
          make macos-release

      - name: Package macOS
        run: |
          mkdir out
          mv dist/*/*.dmg out/${TARGET_NAME_dmg}.dmg
          mv dist/*/*.pkg out/${TARGET_NAME_pkg}.pkg

      - name: Upload macOS Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-builds
          path: ./out
          retention-days: 30

  build_linux:
    if: github.event.inputs.platform == 'all' || github.event.inputs.platform == 'linux' || github.event.inputs.platform == ''
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2.16.0
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true

      - name: Setup dependencies
        run: make linux-install-dependencies

      - name: Prepare for Linux
        run: make linux-prepare

      - name: Build Linux
        env:
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
        run: make linux-release

      - name: Package Linux
        run: |
          ls -R dist/
          mkdir out
          mkdir tmp_out
          for EXT in AppImage deb rpm; do
            KEY=TARGET_NAME_${EXT}
            FILENAME=${!KEY}
            echo "For $EXT ($KEY) filename is ${FILENAME}"
            mv dist/*/*.$EXT tmp_out/${FILENAME}.$EXT
            ls tmp_out
            chmod +x tmp_out/${FILENAME}.$EXT
            cp ./.github/help/linux/* tmp_out/
            mv tmp_out/${FILENAME}.$EXT out/
          done

      - name: Upload Linux Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-builds
          path: ./out
          retention-days: 30

  create_release_manual:
    if: github.event_name == 'workflow_dispatch'
    needs: [build_android, build_windows, build_macos, build_linux]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Extract Android Artifacts
        run: |
          echo "=== Extracting Android artifacts ==="
          ls -la artifacts/
          echo "=== Android builds content ==="
          ls -la artifacts/android-builds/
          
          # 如果Android artifacts是压缩包，解压它
          if [ -f "artifacts/android-builds/android-builds.zip" ]; then
            echo "Found android-builds.zip, extracting..."
            cd artifacts/android-builds
            unzip android-builds.zip
            ls -la
            cd ../..
          fi
          
          echo "=== Windows builds content ==="
          ls -la artifacts/windows-builds/
          
          echo "=== Final artifacts structure ==="
          find artifacts/ -type f -name "*.apk" -o -name "*.aab" -o -name "*.exe" -o -name "*.msix" -o -name "*.dmg" -o -name "*.pkg" -o -name "*.AppImage" -o -name "*.deb" -o -name "*.rpm" | head -20

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.tag_name != '' && github.event.inputs.tag_name || format('v{0}', github.run_number) }}
          name: Release ${{ github.event.inputs.tag_name != '' && github.event.inputs.tag_name || format('v{0}', github.run_number) }}
          body: |
            ## HiddifyWithPanels ${{ github.event.inputs.tag_name != '' && github.event.inputs.tag_name || format('v{0}', github.run_number) }}
            
            ### Downloads
            - **Android**: APK and AAB files available
            - **Windows**: Setup and Portable versions
            - **macOS**: DMG and PKG installers
            - **Linux**: AppImage, DEB, and RPM packages
            
            ### Changes
            See the [changelog](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md) for detailed changes.
            
            ### Note
            This release was created manually via workflow dispatch.
            ${{ github.event.inputs.tag_name == '' && 'Tag name was auto-generated.' || '' }}
          files: |
            # 使用通配符匹配所有文件，确保包含所有平台
            artifacts/**/*.apk
            artifacts/**/*.aab
            artifacts/**/*.exe
            artifacts/**/*.msix
            artifacts/**/*.dmg
            artifacts/**/*.pkg
            artifacts/**/*.AppImage
            artifacts/**/*.deb
            artifacts/**/*.rpm
            # 备用路径，以防上面的路径找不到文件
            artifacts/android-builds/**/*
            artifacts/windows-builds/**/*
            artifacts/macos-builds/**/*
            artifacts/linux-builds/**/*
          draft: false
          prerelease: false

  create_release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [build_android, build_windows, build_macos, build_linux]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            ## HiddifyWithPanels ${{ github.ref_name }}
            
            ### Downloads
            - **Android**: APK and AAB files available
            - **Windows**: Setup and Portable versions
            - **macOS**: DMG and PKG installers
            - **Linux**: AppImage, DEB, and RPM packages
            
            ### Changes
            See the [changelog](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md) for detailed changes.
          files: |
            artifacts/android-builds/*
            artifacts/windows-builds/*
            artifacts/macos-builds/*
            artifacts/linux-builds/*
            # 特别包含MSIX文件
            artifacts/windows-builds/*.msix
          draft: false
          prerelease: false
